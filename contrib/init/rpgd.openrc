#!/sbin/runscript

# backward compatibility for existing gentoo layout 
#
if [ -d "/var/lib/rpg/.rpg" ]; then
	RPGD_DEFAULT_DATADIR="/var/lib/rpg/.rpg"
else
	RPGD_DEFAULT_DATADIR="/var/lib/rpgd"
fi

RPGD_CONFIGFILE=${RPGD_CONFIGFILE:-/etc/rpg/rpg.conf}
RPGD_PIDDIR=${RPGD_PIDDIR:-/var/run/rpgd}
RPGD_PIDFILE=${RPGD_PIDFILE:-${RPGD_PIDDIR}/rpgd.pid}
RPGD_DATADIR=${RPGD_DATADIR:-${RPGD_DEFAULT_DATADIR}}
RPGD_USER=${RPGD_USER:-${RPG_USER:-rpg}}
RPGD_GROUP=${RPGD_GROUP:-rpg}
RPGD_BIN=${RPGD_BIN:-/usr/bin/rpgd}
RPGD_NICE=${RPGD_NICE:-${NICELEVEL:-0}}
RPGD_OPTS="${RPGD_OPTS:-${RPG_OPTS}}"

name="RPG Core Daemon"
description="RPG cryptocurrency P2P network daemon"

command="/usr/bin/rpgd"
command_args="-pid=\"${RPGD_PIDFILE}\" \
		-conf=\"${RPGD_CONFIGFILE}\" \
		-datadir=\"${RPGD_DATADIR}\" \
		-daemon \
		${RPGD_OPTS}"

required_files="${RPGD_CONFIGFILE}"
start_stop_daemon_args="-u ${RPGD_USER} \
			-N ${RPGD_NICE} -w 2000"
pidfile="${RPGD_PIDFILE}"

# The retry schedule to use when stopping the daemon. Could be either
# a timeout in seconds or multiple signal/timeout pairs (like
# "SIGKILL/180 SIGTERM/300")
retry="${RPGD_SIGTERM_TIMEOUT}"

depend() {
	need localmount net
}

# verify
# 1) that the datadir exists and is writable (or create it)
# 2) that a directory for the pid exists and is writable
# 3) ownership and permissions on the config file
start_pre() {
	checkpath \
	-d \
	--mode 0750 \
	--owner "${RPGD_USER}:${RPGD_GROUP}" \
	"${RPGD_DATADIR}"

	checkpath \
	-d \
	--mode 0755 \
	--owner "${RPGD_USER}:${RPGD_GROUP}" \
	"${RPGD_PIDDIR}"

	checkpath -f \
	-o ${RPGD_USER}:${RPGD_GROUP} \
	-m 0660 \
	${RPGD_CONFIGFILE}

	checkconfig || return 1
}

checkconfig()
{
	if ! grep -qs '^rpcpassword=' "${RPGD_CONFIGFILE}" ; then
		eerror ""
		eerror "ERROR: You must set a secure rpcpassword to run rpgd."
		eerror "The setting must appear in ${RPGD_CONFIGFILE}"
		eerror ""
		eerror "This password is security critical to securing wallets "
		eerror "and must not be the same as the rpcuser setting."
		eerror "You can generate a suitable random password using the following "
		eerror "command from the shell:"
		eerror ""
		eerror "bash -c 'tr -dc a-zA-Z0-9 < /dev/urandom | head -c32 && echo'"
		eerror ""
		eerror "It is recommended that you also set alertnotify so you are "
		eerror "notified of problems:"
		eerror ""
		eerror "ie: alertnotify=echo %%s | mail -s \"RPG Alert\"" \
			"admin@foo.com"
		eerror ""
		return 1
	fi
}
